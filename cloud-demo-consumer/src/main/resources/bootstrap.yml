spring:
  application:
    name: cloud-demo-consumer # 端口已经配置到 -NACOS 注册中心
  cloud:
    # nacos相关配置
    nacos:
      config:
        server-addr: 139.198.183.194:8848 # 配置文件的地址
        namespace: 93c6a9f0-8484-4db1-a6d0-e7926c8225ce # 配置命名空间
        file-extension: yaml # 配置以yaml的形式----不配置就拉取不到
      discovery:
        server-addr: 139.198.183.194:8848 # 注册中心的地址
        namespace: 93c6a9f0-8484-4db1-a6d0-e7926c8225ce # 注册命名空间
    # sentinel限流监控中心
    sentinel:
      transport:
        dashboard: localhost:8010
        port: 8722
      eager: true
      # sentinel nacos 相关配置 动态数据源
      datasource:
        # 限流规则flow
        ds1:
          nacos:
            namespase: 93c6a9f0-8484-4db1-a6d0-e7926c8225ce
            server-addr: 139.198.183.194:8848
            dataId: cloud-demo-consumer-flow
            data-type: json
            rule-type: flow
        # 熔断规则degrade
        ds2:
          nacos:
            namespase: 93c6a9f0-8484-4db1-a6d0-e7926c8225ce
            server-addr: 139.198.183.194:8848
            dataId: cloud-demo-consumer-degrade
            data-type: json
            rule-type: degrade
    gateway:
      discovery:
        locator:
          enabled: true  #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务
          lower-case-service-id: true  #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了
      routes:
      - id: echo-route
        uri: http://localhost:8070
        predicates:
          - Path=/test/provider/echo
        #前缀处理 网关发送/test/provider/echo，最后会处理成/provider/echo
        filters:
          - StripPrefix=1
      - id: spring-route
        uri: https://spring.io/projects
        predicates:
          - Path=/spring-cloud
      - id: provider-route
        #cloud-demo-provider为微服务在nacos中注册的服务名称
        uri: lb://cloud-demo-provider
        predicates:
          #转发的路径需要是在微服务真实存在的路径
          - Path=/provider/** # 转发该路径
        filters:
          #自定义的过滤器类名是MyGateWayFilter,此处配置只需要配置GateWayFilter之前的前缀my就行
          - My
  main:
    allow-bean-definition-overriding: true
# Endpoint 信息暴露
management:
  endpoints:
    web:
      exposure:
        include: "*"

#Feign對sentinel的支持
feign:
  sentinel:
    enabled: true